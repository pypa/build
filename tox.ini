[tox]
envlist =
    fix
    {py39, py38, py37, py36, py35, py27, pypy3, pypy2}{, -path, -sdist, -wheel}
    type
    docs
isolated_build = true
skip_missing_interpreters = true
minversion = 3.14
requires =
    virtualenv>=20.0.34

[testenv]
description =
    run test suite with {basepython}
    path: via PYTHONPATH
    sdist: via source distribution
    wheel: via wheel
setenv =
    COVERAGE_FILE = {envtmpdir}/.coverage
    {py27,pypy2}: PYTHONWARNINGS = ignore:DEPRECATION::pip._internal.cli.base_command
    path: TEST_MODE = path
    sdist: TEST_MODE = sdist
    wheel: TEST_MODE = wheel
passenv =
    PYTEST_*
    PIP_*
skip_install = path,sdist,wheel: false
deps =
    path,sdist,wheel: -rrequirements-dev.txt
extras =
    test
commands =
    pytest -rsx --cov --cov-config setup.cfg \
      --cov-report=html:{envdir}/htmlcov --cov-context=test \
      --cov-report=xml:{toxworkdir}/coverage.{envname}.xml \
      tests {posargs:--run-integration}

[testenv:fix]
description = run static analysis and style checks
passenv =
    HOMEPATH
    PROGRAMDATA
basepython = python3.9
skip_install = true
deps =
    pre-commit>=2
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'print("hint: run {envdir}/bin/pre-commit install to add checks as pre-commit hook")'

[testenv:type]
description = run type check on code base
deps =
    mypy==0.782
commands =
    mypy --python-version 3.8 src/build
    mypy --python-version 2.7 src/build

[testenv:docs]
description = build documentations
basepython = python3.8
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -n -W docs/source {envtmpdir}
    python -c 'print("Documentation available under file://{envtmpdir}/index.html")'
